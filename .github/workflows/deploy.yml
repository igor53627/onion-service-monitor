name: Deploy to GitHub Pages

on:
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight UTC
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  monitor:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Arti image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.arti
          push: false
          load: true
          tags: onion-service-monitor-arti:latest
          cache-from: type=gha,scope=arti
          cache-to: type=gha,mode=max,scope=arti

      - name: Build Monitor image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          load: true
          tags: onion-service-monitor-monitor:latest
          cache-from: type=gha,scope=monitor
          cache-to: type=gha,mode=max,scope=monitor

      - name: Run monitoring
        run: |
          docker compose up --no-build --abort-on-container-exit
        timeout-minutes: 15

      - name: Sync data to frontend
        run: |
          cp onions.json frontend/data/services.json

      - name: Commit updated monitoring data
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add onions.json frontend/data/services.json
          git diff --staged --quiet || git commit -m "Update onion service monitoring data [skip ci]"
          git push

      - name: Upload monitoring artifact
        uses: actions/upload-artifact@v4
        with:
          name: monitoring-data
          path: onions.json

  deploy:
    needs: monitor
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Wait for any pending deployments
        run: sleep 30

      - name: Checkout
        uses: actions/checkout@v4

      - name: Download monitoring data
        uses: actions/download-artifact@v4
        with:
          name: monitoring-data

      - name: Sync data to frontend
        run: |
          cp onions.json frontend/data/services.json

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
