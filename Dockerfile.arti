# Multi-stage build for Arti
FROM rust:slim-bookworm as builder

# Install dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    build-essential \
    libssl-dev \
    pkg-config \
    libsqlite3-dev \
    && rm -rf /var/lib/apt/lists/*

# Install Arti
RUN cargo install --locked arti

# Runtime image
FROM debian:bookworm-slim

# Install runtime dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    ca-certificates \
    libssl3 \
    libsqlite3-0 \
    libgcc-s1 \
    libc6 \
    zlib1g \
    && rm -rf /var/lib/apt/lists/*

# Copy Arti binary from builder
COPY --from=builder /usr/local/cargo/bin/arti /usr/local/bin/arti

# Create arti user and group
RUN groupadd -r arti && useradd -r -g arti arti

# Create data directories
RUN mkdir -p /app/data/cache /app/data/state && \
    chown -R arti:arti /app

WORKDIR /app

# Switch to arti user
USER arti

# Expose SOCKS5 port
EXPOSE 9150

# Run Arti
CMD ["arti", "proxy", "-c", "/app/arti-config.toml"]
